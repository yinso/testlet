// Generated by CoffeeScript 1.4.0
(function() {
  var Test, TestResult;

  TestResult = require('./test-result');

  Test = (function() {

    function Test(runner, name, func) {
      this.runner = runner;
      this.name = name;
      this.func = func;
      this.async = this.func && this.func.length;
    }

    Test.prototype.run = function(next) {
      var result,
        _this = this;
      if (this.async) {
        try {
          return this.func(function(err, res) {
            var result;
            result = err ? new TestResult(_this, _this.runner.resetLog(), err) : new TestResult(_this, _this.runner.resetLog());
            return next(null, result);
          });
        } catch (e) {
          return next(null, new TestResult(this, this.runner.resetLog(), e));
        }
      } else {
        result = (function() {
          try {
            this.func();
            return new TestResult(this, this.runner.resetLog());
          } catch (e) {
            return new TestResult(this, this.runner.resetLog(), e);
          }
        }).call(this);
        return next(null, result);
      }
    };

    return Test;

  })();

  module.exports = Test;

}).call(this);
